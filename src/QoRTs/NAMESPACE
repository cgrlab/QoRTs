import(methods)

export(
 #Reading input data from file:
 read.qc.results.data,
 completeAndCheckDecoder,
 #read.in.results.data.with.single.decoder.file,
 #read.in.results.data.with.two.decoder.files,
 #read.in.results.data.with.decoder,
 
 #Plotter Building:
 QoRTs.default.plotting.params,
 build.plotter.highlightSample.colorByLane,
 build.plotter.highlightSample,
 build.plotter.colorBySample,
 build.plotter.colorByLane,
 build.plotter.colorByGroup,
 build.plotter.basic,
 
 #Specific Plots:
 makePlot.qual.pair,
 makePlot.gc,
 makePlot.clipping,
 makePlot.cigarOp.byCycle,
 makePlot.legend.box,
 makePlot.insert.size, 
 makePlot.genebody,
 makePlot.genebody.coverage,
 makePlot.genebody.coverage.UMQuartile,
 makePlot.genebody.coverage.lowExpress,
 makePlot.missingness.rate,
 makePlot.cigarLength.distribution,
 makePlot.gene.cdf,
 makePlot.raw.NVC,
 makePlot.minus.clipping.NVC,
 makePlot.NVC.lead.clip,
 makePlot.NVC.tail.clip,
 makePlot.NVC.lead.clip.matchByClipPosition,
 makePlot.NVC.tail.clip.matchByClipPosition,
 makePlot.biotype.rates,
 
 makePlot.gene.assignment.rates,
 
 makePlot.splice.junction.loci.counts,
 makePlot.splice.junction.event.ratesPerRead,
 makePlot.splice.junction.event.proportions,
 makePlot.splice.junction.event.counts,
 makePlot.splice.junction.event.proportionsByType,
 
 makePlot.strandedness.test,
 makePlot.dropped.rates,
 makePlot.mapping.rates,
 makePlot.legend.over,
 makePlot.chrom.type.rates,
 makePlot.norm.factors,
 makePlot.norm.factors.vs.TC,
 get.summary.table,
 get.size.factors,
 
 #Multi-plots:
 makeMultiPlot.highlightSample.colorByLane.all,
 makeMultiPlot.highlightSample.colorByLane,
 makeMultiPlot.basic,
 makeMultiPlot.highlightSample,
 makeMultiPlot.highlightSample.all,
 makeMultiPlot.colorByGroup,
 makeMultiPlot.colorByLane,
 makeMultiPlot.colorBySample,
 makeMultiPlot.all
)